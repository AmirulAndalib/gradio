import{SvelteComponentDev as F,init as G,safe_not_equal as H,dispatch_dev as B,validate_store as J,component_subscribe as K,validate_slots as M,afterUpdate as j,assign as Q,binding_callbacks as V,bind as W,create_component as p,mount_component as C,transition_in as I,transition_out as E,destroy_component as k,space as R,insert_dev as L,get_spread_update as Y,get_spread_object as Z,add_flush_callback as x,detach_dev as O}from"../../../node/dev/svelte-internal.js";import{X as P,S as q}from"./index-09ad131b.js";import{C as D,a as N}from"./Widgets.svelte_svelte_type_style_lang-ee06ab6d.js";import{B as T}from"./Button-70427016.js";import{B as U}from"./BlockLabel-facb91af.js";function X(o){let t,n,u,d,r,i,c;const g=[o[8]];let _={};for(let l=0;l<g.length;l+=1)_=Q(_,g[l]);t=new q({props:_,$$inline:!0}),u=new U({props:{Icon:N,show_label:o[7],label:o[6],float:!1},$$inline:!0});function w(l){o[13](l)}let h={language:o[1],lines:o[2],dark_mode:o[9]};o[0]!==void 0&&(h.value=o[0]),r=new D({props:h,$$inline:!0}),V.push(()=>W(r,"value",w));const v={c:function(){p(t.$$.fragment),n=R(),p(u.$$.fragment),d=R(),p(r.$$.fragment)},m:function(s,a){C(t,s,a),L(s,n,a),C(u,s,a),L(s,d,a),C(r,s,a),c=!0},p:function(s,a){const b=a&256?Y(g,[Z(s[8])]):{};t.$set(b);const m={};a&128&&(m.show_label=s[7]),a&64&&(m.label=s[6]),u.$set(m);const f={};a&2&&(f.language=s[1]),a&4&&(f.lines=s[2]),!i&&a&1&&(i=!0,f.value=s[0],x(()=>i=!1)),r.$set(f)},i:function(s){c||(I(t.$$.fragment,s),I(u.$$.fragment,s),I(r.$$.fragment,s),c=!0)},o:function(s){E(t.$$.fragment,s),E(u.$$.fragment,s),E(r.$$.fragment,s),c=!1},d:function(s){s&&(O(n),O(d)),k(t,s),k(u,s),k(r,s)}};return B("SvelteRegisterBlock",{block:v,id:X.name,type:"slot",source:'(32:0) <Block variant={\\"solid\\"} padding={false} {elem_id} {elem_classes} {visible}>',ctx:o}),v}function y(o){let t,n;t=new T({props:{variant:"solid",padding:!1,elem_id:o[3],elem_classes:o[4],visible:o[5],$$slots:{default:[X]},$$scope:{ctx:o}},$$inline:!0});const u={c:function(){p(t.$$.fragment)},l:function(r){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(r,i){C(t,r,i),n=!0},p:function(r,[i]){const c={};i&8&&(c.elem_id=r[3]),i&16&&(c.elem_classes=r[4]),i&32&&(c.visible=r[5]),i&65991&&(c.$$scope={dirty:i,ctx:r}),t.$set(c)},i:function(r){n||(I(t.$$.fragment,r),n=!0)},o:function(r){E(t.$$.fragment,r),n=!1},d:function(r){k(t,r)}};return B("SvelteRegisterBlock",{block:u,id:y.name,type:"component",source:"",ctx:o}),u}function $(o,t,n){let u;J(P,"_"),K(o,P,e=>n(14,u=e));let{$$slots:d={},$$scope:r}=t;M("InteractiveCode",d,[]);let{value:i=""}=t,{value_is_output:c=!1}=t,{language:g=""}=t,{lines:_=5}=t,{target:w}=t,{elem_id:h=""}=t,{elem_classes:v=[]}=t,{visible:l=!0}=t,{label:s=u("code.code")}=t,{show_label:a=!0}=t,{loading_status:b}=t,{gradio:m}=t,f=w.classList.contains("dark");function S(){m.dispatch("change",i),c||m.dispatch("input")}j(()=>{n(10,c=!1)}),o.$$.on_mount.push(function(){w===void 0&&!("target"in t||o.$$.bound[o.$$.props.target])&&console.warn("<InteractiveCode> was created without expected prop 'target'"),b===void 0&&!("loading_status"in t||o.$$.bound[o.$$.props.loading_status])&&console.warn("<InteractiveCode> was created without expected prop 'loading_status'"),m===void 0&&!("gradio"in t||o.$$.bound[o.$$.props.gradio])&&console.warn("<InteractiveCode> was created without expected prop 'gradio'")});const z=["value","value_is_output","language","lines","target","elem_id","elem_classes","visible","label","show_label","loading_status","gradio"];Object.keys(t).forEach(e=>{!~z.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<InteractiveCode> was created with unknown prop '${e}'`)});function A(e){i=e,n(0,i)}return o.$$set=e=>{"value"in e&&n(0,i=e.value),"value_is_output"in e&&n(10,c=e.value_is_output),"language"in e&&n(1,g=e.language),"lines"in e&&n(2,_=e.lines),"target"in e&&n(11,w=e.target),"elem_id"in e&&n(3,h=e.elem_id),"elem_classes"in e&&n(4,v=e.elem_classes),"visible"in e&&n(5,l=e.visible),"label"in e&&n(6,s=e.label),"show_label"in e&&n(7,a=e.show_label),"loading_status"in e&&n(8,b=e.loading_status),"gradio"in e&&n(12,m=e.gradio)},o.$capture_state=()=>({afterUpdate:j,_:P,Code:D,StatusTracker:q,Block:T,BlockLabel:U,CodeIcon:N,value:i,value_is_output:c,language:g,lines:_,target:w,elem_id:h,elem_classes:v,visible:l,label:s,show_label:a,loading_status:b,gradio:m,dark_mode:f,handle_change:S,$_:u}),o.$inject_state=e=>{"value"in e&&n(0,i=e.value),"value_is_output"in e&&n(10,c=e.value_is_output),"language"in e&&n(1,g=e.language),"lines"in e&&n(2,_=e.lines),"target"in e&&n(11,w=e.target),"elem_id"in e&&n(3,h=e.elem_id),"elem_classes"in e&&n(4,v=e.elem_classes),"visible"in e&&n(5,l=e.visible),"label"in e&&n(6,s=e.label),"show_label"in e&&n(7,a=e.show_label),"loading_status"in e&&n(8,b=e.loading_status),"gradio"in e&&n(12,m=e.gradio),"dark_mode"in e&&n(9,f=e.dark_mode)},t&&"$$inject"in t&&o.$inject_state(t.$$inject),o.$$.update=()=>{o.$$.dirty&1&&S()},[i,g,_,h,v,l,s,a,b,f,c,w,m,A]}class ee extends F{constructor(t){super(t),G(this,t,$,y,H,{value:0,value_is_output:10,language:1,lines:2,target:11,elem_id:3,elem_classes:4,visible:5,label:6,show_label:7,loading_status:8,gradio:12}),B("SvelteRegisterComponent",{component:this,tagName:"InteractiveCode",options:t,id:y.name})}get value(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value_is_output(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value_is_output(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get language(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set language(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get lines(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set lines(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get target(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set target(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_id(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_classes(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_classes(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get loading_status(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set loading_status(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get gradio(){throw new Error("<InteractiveCode>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set gradio(t){throw new Error("<InteractiveCode>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}const ie=ee;export{ie as default};
//# sourceMappingURL=index-48cb6bd2.js.map
