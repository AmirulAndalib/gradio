import{SvelteComponentDev as C,init as U,safe_not_equal as P,dispatch_dev as m,validate_slots as S,svg_element as h,attr_dev as r,set_style as d,add_location as p,insert_dev as B,append_dev as g,noop as w,detach_dev as R,validate_store as F,component_subscribe as G,createEventDispatcher as x,element as H,space as J,create_component as z,toggle_class as I,mount_component as N,transition_in as b,group_outros as K,transition_out as k,check_outros as Q,destroy_component as D}from"../../../node/dev/svelte-internal.js";import{X as y}from"./index-168e7816.js";import"./Button-e33227ec.js";import{I as O}from"./IconButton-f58f3320.js";const v="Users/peterallen/Projects/gradio/js/icons/src/Clear.svelte";function $(i){let e,o,s,n;const t={c:function(){e=h("svg"),o=h("g"),s=h("path"),n=h("path"),r(s,"d","M18,6L6.087,17.913"),d(s,"fill","none"),d(s,"fill-rule","nonzero"),d(s,"stroke-width","2px"),p(s,v,14,2,374),r(o,"transform","matrix(1.14096,-0.140958,-0.140958,1.14096,-0.0559523,0.0559523)"),p(o,v,11,1,287),r(n,"d","M4.364,4.364L19.636,19.636"),d(n,"fill","none"),d(n,"fill-rule","nonzero"),d(n,"stroke-width","2px"),p(n,v,19,1,475),r(e,"width","100%"),r(e,"height","100%"),r(e,"viewBox","0 0 24 24"),r(e,"version","1.1"),r(e,"xmlns","http://www.w3.org/2000/svg"),r(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),r(e,"xml:space","preserve"),r(e,"stroke","currentColor"),d(e,"fill-rule","evenodd"),d(e,"clip-rule","evenodd"),d(e,"stroke-linecap","round"),d(e,"stroke-linejoin","round"),p(e,v,0,0,0)},l:function(c){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(c,l){B(c,e,l),g(e,o),g(o,s),g(e,n)},p:w,i:w,o:w,d:function(c){c&&R(e)}};return m("SvelteRegisterBlock",{block:t,id:$.name,type:"component",source:"",ctx:i}),t}function T(i,e){let{$$slots:o={},$$scope:s}=e;S("Clear",o,[]);const n=[];return Object.keys(e).forEach(t=>{!~n.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Clear> was created with unknown prop '${t}'`)}),[]}class q extends C{constructor(e){super(e),U(this,e,T,$,P,{}),m("SvelteRegisterComponent",{component:this,tagName:"Clear",options:e,id:$.name})}}const L="Users/peterallen/Projects/gradio/js/icons/src/Edit.svelte";function j(i){let e,o;const s={c:function(){e=h("svg"),o=h("path"),r(o,"d","M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"),p(o,L,12,1,231),r(e,"xmlns","http://www.w3.org/2000/svg"),r(e,"width","100%"),r(e,"height","100%"),r(e,"viewBox","0 0 24 24"),r(e,"fill","none"),r(e,"stroke","currentColor"),r(e,"stroke-width","1.5"),r(e,"stroke-linecap","round"),r(e,"stroke-linejoin","round"),r(e,"class","feather feather-edit-2"),p(e,L,0,0,0)},l:function(t){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(t,u){B(t,e,u),g(e,o)},p:w,i:w,o:w,d:function(t){t&&R(e)}};return m("SvelteRegisterBlock",{block:s,id:j.name,type:"component",source:"",ctx:i}),s}function V(i,e){let{$$slots:o={},$$scope:s}=e;S("Edit",o,[]);const n=[];return Object.keys(e).forEach(t=>{!~n.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Edit> was created with unknown prop '${t}'`)}),[]}class X extends C{constructor(e){super(e),U(this,e,V,j,P,{}),m("SvelteRegisterComponent",{component:this,tagName:"Edit",options:e,id:j.name})}}const W="Users/peterallen/Projects/gradio/js/upload/src/ModifyUpload.svelte";function E(i){let e,o;e=new O({props:{Icon:X,label:i[2]("common.edit")},$$inline:!0}),e.$on("click",i[4]);const s={c:function(){z(e.$$.fragment)},m:function(t,u){N(e,t,u),o=!0},p:function(t,u){const c={};u&4&&(c.label=t[2]("common.edit")),e.$set(c)},i:function(t){o||(b(e.$$.fragment,t),o=!0)},o:function(t){k(e.$$.fragment,t),o=!1},d:function(t){D(e,t)}};return m("SvelteRegisterBlock",{block:s,id:E.name,type:"if",source:"(14:1) {#if editable}",ctx:i}),s}function M(i){let e,o,s,n,t=i[0]&&E(i);s=new O({props:{Icon:q,label:i[2]("common.clear")},$$inline:!0}),s.$on("click",i[5]);const u={c:function(){e=H("div"),t&&t.c(),o=J(),z(s.$$.fragment),r(e,"class","svelte-1wj0ocy"),I(e,"not-absolute",!i[1]),d(e,"position",i[1]?"absolute":"static"),p(e,W,13,0,298)},l:function(l){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(l,f){B(l,e,f),t&&t.m(e,null),g(e,o),N(s,e,null),n=!0},p:function(l,[f]){l[0]?t?(t.p(l,f),f&1&&b(t,1)):(t=E(l),t.c(),b(t,1),t.m(e,o)):t&&(K(),k(t,1,1,()=>{t=null}),Q());const _={};f&4&&(_.label=l[2]("common.clear")),s.$set(_),(!n||f&2)&&I(e,"not-absolute",!l[1]),f&2&&d(e,"position",l[1]?"absolute":"static")},i:function(l){n||(b(t),b(s.$$.fragment,l),n=!0)},o:function(l){k(t),k(s.$$.fragment,l),n=!1},d:function(l){l&&R(e),t&&t.d(),D(s)}};return m("SvelteRegisterBlock",{block:u,id:M.name,type:"component",source:"",ctx:i}),u}function Y(i,e,o){let s;F(y,"_"),G(i,y,a=>o(2,s=a));let{$$slots:n={},$$scope:t}=e;S("ModifyUpload",n,[]);let{editable:u=!1}=e,{absolute:c=!0}=e;const l=x(),f=["editable","absolute"];Object.keys(e).forEach(a=>{!~f.indexOf(a)&&a.slice(0,2)!=="$$"&&a!=="slot"&&console.warn(`<ModifyUpload> was created with unknown prop '${a}'`)});const _=()=>l("edit"),A=a=>{l("clear"),a.stopPropagation()};return i.$$set=a=>{"editable"in a&&o(0,u=a.editable),"absolute"in a&&o(1,c=a.absolute)},i.$capture_state=()=>({IconButton:O,Edit:X,Clear:q,createEventDispatcher:x,_:y,editable:u,absolute:c,dispatch:l,$_:s}),i.$inject_state=a=>{"editable"in a&&o(0,u=a.editable),"absolute"in a&&o(1,c=a.absolute)},e&&"$$inject"in e&&i.$inject_state(e.$$inject),[u,c,s,l,_,A]}class ne extends C{constructor(e){super(e),U(this,e,Y,M,P,{editable:0,absolute:1}),m("SvelteRegisterComponent",{component:this,tagName:"ModifyUpload",options:e,id:M.name})}get editable(){throw new Error("<ModifyUpload>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set editable(e){throw new Error("<ModifyUpload>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get absolute(){throw new Error("<ModifyUpload>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set absolute(e){throw new Error("<ModifyUpload>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{q as C,ne as M};
//# sourceMappingURL=ModifyUpload-ddf21bcf.js.map
