import{SvelteComponentDev as B,init as E,safe_not_equal as C,dispatch_dev as f,validate_slots as j,svg_element as v,attr_dev as m,add_location as _,insert_dev as R,append_dev as Z,noop as h,detach_dev as I,validate_store as M,component_subscribe as D,createEventDispatcher as b,globals as N,create_component as q,mount_component as L,transition_in as U,transition_out as X,destroy_component as z}from"../../../node/dev/svelte-internal.js";import{X as d}from"./index-0c627992.js";import{I as k}from"./IconButton-559a7ff4.js";import{S}from"./utils-c3e3db58.js";const y="Users/peterallen/Projects/gradio/js/icons/src/Community.svelte";function w(r){let t,o;const s={c:function(){t=v("svg"),o=v("path"),m(o,"d","M23,20a5,5,0,0,0-3.89,1.89L11.8,17.32a4.46,4.46,0,0,0,0-2.64l7.31-4.57A5,5,0,1,0,18,7a4.79,4.79,0,0,0,.2,1.32l-7.31,4.57a5,5,0,1,0,0,6.22l7.31,4.57A4.79,4.79,0,0,0,18,25a5,5,0,1,0,5-5ZM23,4a3,3,0,1,1-3,3A3,3,0,0,1,23,4ZM7,19a3,3,0,1,1,3-3A3,3,0,0,1,7,19Zm16,9a3,3,0,1,1,3-3A3,3,0,0,1,23,28Z"),m(o,"fill","currentColor"),_(o,y,1,2,72),m(t,"id","icon"),m(t,"xmlns","http://www.w3.org/2000/svg"),m(t,"viewBox","0 0 32 32"),_(t,y,0,0,0)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,c){R(n,t,c),Z(t,o)},p:h,i:h,o:h,d:function(n){n&&I(t)}};return f("SvelteRegisterBlock",{block:s,id:w.name,type:"component",source:"",ctx:r}),s}function F(r,t){let{$$slots:o={},$$scope:s}=t;j("Community",o,[]);const a=[];return Object.keys(t).forEach(n=>{!~a.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<Community> was created with unknown prop '${n}'`)}),[]}class x extends B{constructor(t){super(t),E(this,t,F,w,C,{}),f("SvelteRegisterComponent",{component:this,tagName:"Community",options:t,id:w.name})}}const{console:p}=N;function g(r){let t,o;t=new k({props:{Icon:x,label:r[3]("common.share"),pending:r[2]},$$inline:!0}),t.$on("click",r[5]);const s={c:function(){q(t.$$.fragment)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,c){L(t,n,c),o=!0},p:function(n,[c]){const i={};c&8&&(i.label=n[3]("common.share")),c&4&&(i.pending=n[2]),t.$set(i)},i:function(n){o||(U(t.$$.fragment,n),o=!0)},o:function(n){X(t.$$.fragment,n),o=!1},d:function(n){z(t,n)}};return f("SvelteRegisterBlock",{block:s,id:g.name,type:"component",source:"",ctx:r}),s}function G(r,t,o){let s;M(d,"_"),D(r,d,e=>o(3,s=e));let{$$slots:a={},$$scope:n}=t;j("ShareButton",a,[]);const c=b();let{formatter:i}=t,{value:l}=t,u=!1;r.$$.on_mount.push(function(){i===void 0&&!("formatter"in t||r.$$.bound[r.$$.props.formatter])&&p.warn("<ShareButton> was created without expected prop 'formatter'"),l===void 0&&!("value"in t||r.$$.bound[r.$$.props.value])&&p.warn("<ShareButton> was created without expected prop 'value'")});const A=["formatter","value"];Object.keys(t).forEach(e=>{!~A.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&p.warn(`<ShareButton> was created with unknown prop '${e}'`)});const P=async()=>{try{o(2,u=!0);const e=await i(l);c("share",{description:e})}catch(e){console.error(e);let O=e instanceof S?e.message:"Share failed.";c("error",O)}finally{o(2,u=!1)}};return r.$$set=e=>{"formatter"in e&&o(0,i=e.formatter),"value"in e&&o(1,l=e.value)},r.$capture_state=()=>({IconButton:k,Community:x,createEventDispatcher:b,ShareError:S,_:d,dispatch:c,formatter:i,value:l,pending:u,$_:s}),r.$inject_state=e=>{"formatter"in e&&o(0,i=e.formatter),"value"in e&&o(1,l=e.value),"pending"in e&&o(2,u=e.pending)},t&&"$$inject"in t&&r.$inject_state(t.$$inject),[i,l,u,s,c,P]}class T extends B{constructor(t){super(t),E(this,t,G,g,C,{formatter:0,value:1}),f("SvelteRegisterComponent",{component:this,tagName:"ShareButton",options:t,id:g.name})}get formatter(){throw new Error("<ShareButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set formatter(t){throw new Error("<ShareButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value(){throw new Error("<ShareButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(t){throw new Error("<ShareButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{T as S};
//# sourceMappingURL=ShareButton-ebe1bfa6.js.map
