{"version":3,"file":"index-121a129d.js","sources":["../../../../js/gradio-preview/test/imageslider/frontend/interactive/Webcam.svelte","../../../../js/gradio-preview/test/imageslider/frontend/interactive/Cropper.svelte","../../../../js/gradio-preview/test/imageslider/frontend/interactive/ModifySketch.svelte","../../../../js/gradio-preview/test/imageslider/frontend/interactive/SketchSettings.svelte","../../../../js/gradio-preview/test/imageslider/frontend/interactive/Image.svelte","../../../../js/gradio-preview/test/imageslider/frontend/interactive/InteractiveImage.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher, onMount } from \"svelte\";\n\timport { Camera, Circle, Square } from \"../../../../../icons\";\n\timport { _ } from \"svelte-i18n\";\n\n\tlet video_source: HTMLVideoElement;\n\tlet canvas: HTMLCanvasElement;\n\texport let streaming = false;\n\texport let pending = false;\n\n\texport let mode: \"image\" | \"video\" = \"image\";\n\texport let mirror_webcam: boolean;\n\texport let include_audio: boolean;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tstream: undefined;\n\t\tcapture:\n\t\t\t| {\n\t\t\t\t\tdata: FileReader[\"result\"];\n\t\t\t\t\tname: string;\n\t\t\t\t\tis_example?: boolean;\n\t\t\t\t\tis_file: boolean;\n\t\t\t  }\n\t\t\t| string;\n\t\terror: string;\n\t\tstart_recording: undefined;\n\t\tstop_recording: undefined;\n\t}>();\n\n\tonMount(() => (canvas = document.createElement(\"canvas\")));\n\n\tasync function access_webcam(): Promise<void> {\n\t\ttry {\n\t\t\tstream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\tvideo: true,\n\t\t\t\taudio: include_audio\n\t\t\t});\n\t\t\tvideo_source.srcObject = stream;\n\t\t\tvideo_source.muted = true;\n\t\t\tvideo_source.play();\n\t\t} catch (err) {\n\t\t\tif (err instanceof DOMException && err.name == \"NotAllowedError\") {\n\t\t\t\tdispatch(\"error\", $_(\"image.allow_webcam_access\"));\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction take_picture(): void {\n\t\tvar context = canvas.getContext(\"2d\")!;\n\n\t\tif (video_source.videoWidth && video_source.videoHeight) {\n\t\t\tcanvas.width = video_source.videoWidth;\n\t\t\tcanvas.height = video_source.videoHeight;\n\t\t\tcontext.drawImage(\n\t\t\t\tvideo_source,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tvideo_source.videoWidth,\n\t\t\t\tvideo_source.videoHeight\n\t\t\t);\n\n\t\t\tvar data = canvas.toDataURL(\"image/png\");\n\t\t\tdispatch(streaming ? \"stream\" : \"capture\", data);\n\t\t}\n\t}\n\n\tlet recording = false;\n\tlet recorded_blobs: BlobPart[] = [];\n\tlet stream: MediaStream;\n\tlet mimeType: string;\n\tlet media_recorder: MediaRecorder;\n\n\tfunction take_recording(): void {\n\t\tif (recording) {\n\t\t\tmedia_recorder.stop();\n\t\t\tlet video_blob = new Blob(recorded_blobs, { type: mimeType });\n\t\t\tlet ReaderObj = new FileReader();\n\t\t\tReaderObj.onload = function (e): void {\n\t\t\t\tif (e.target) {\n\t\t\t\t\tdispatch(\"capture\", {\n\t\t\t\t\t\tdata: e.target.result,\n\t\t\t\t\t\tname: \"sample.\" + mimeType.substring(6),\n\t\t\t\t\t\tis_example: false,\n\t\t\t\t\t\tis_file: false\n\t\t\t\t\t});\n\t\t\t\t\tdispatch(\"stop_recording\");\n\t\t\t\t}\n\t\t\t};\n\t\t\tReaderObj.readAsDataURL(video_blob);\n\t\t} else {\n\t\t\tdispatch(\"start_recording\");\n\t\t\trecorded_blobs = [];\n\t\t\tlet validMimeTypes = [\"video/webm\", \"video/mp4\"];\n\t\t\tfor (let validMimeType of validMimeTypes) {\n\t\t\t\tif (MediaRecorder.isTypeSupported(validMimeType)) {\n\t\t\t\t\tmimeType = validMimeType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (mimeType === null) {\n\t\t\t\tconsole.error(\"No supported MediaRecorder mimeType\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmedia_recorder = new MediaRecorder(stream, {\n\t\t\t\tmimeType: mimeType\n\t\t\t});\n\t\t\tmedia_recorder.addEventListener(\"dataavailable\", function (e) {\n\t\t\t\trecorded_blobs.push(e.data);\n\t\t\t});\n\t\t\tmedia_recorder.start(200);\n\t\t}\n\t\trecording = !recording;\n\t}\n\n\taccess_webcam();\n\n\tif (streaming && mode === \"image\") {\n\t\twindow.setInterval(() => {\n\t\t\tif (video_source && !pending) {\n\t\t\t\ttake_picture();\n\t\t\t}\n\t\t}, 500);\n\t}\n</script>\n\n<div class=\"wrap\">\n\t<!-- svelte-ignore a11y-media-has-caption -->\n\t<video bind:this={video_source} class:flip={mirror_webcam} />\n\t{#if !streaming}\n\t\t<button on:click={mode === \"image\" ? take_picture : take_recording}>\n\t\t\t{#if mode === \"video\"}\n\t\t\t\t{#if recording}\n\t\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t\t<Square />\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t\t<Circle />\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<Camera />\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n</div>\n\n<style>\n\t.wrap {\n\t\tposition: relative;\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t\tmin-height: var(--size-60);\n\t}\n\n\tvideo {\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t}\n\n\tbutton {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\tright: 0px;\n\t\tbottom: var(--size-2);\n\t\tleft: 0px;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tmargin: auto;\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tborder-radius: var(--radius-xl);\n\t\tbackground-color: rgba(0, 0, 0, 0.9);\n\t\twidth: var(--size-10);\n\t\theight: var(--size-10);\n\t}\n\n\t@media (--screen-md) {\n\t\tbutton {\n\t\t\tbottom: var(--size-4);\n\t\t}\n\t}\n\n\t@media (--screen-xl) {\n\t\tbutton {\n\t\t\tbottom: var(--size-8);\n\t\t}\n\t}\n\n\t.icon {\n\t\topacity: 0.8;\n\t\twidth: 50%;\n\t\theight: 50%;\n\t\tcolor: white;\n\t}\n\n\t.flip {\n\t\ttransform: scaleX(-1);\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\t// import Cropper from \"cropperjs\";\n\timport { onMount, createEventDispatcher } from \"svelte\";\n\n\texport let image: string;\n\tlet el: HTMLImageElement;\n\n\tconst dispatch = createEventDispatcher();\n\t// let cropper: Cropper;\n\n\texport function destroy(): void {\n\t\t// cropper.destroy();\n\t}\n\n\texport function create(): void {\n\t\t// if (cropper) {\n\t\t// \tdestroy();\n\t\t// }\n\t\t// cropper = new Cropper(el, {\n\t\t// \tautoCropArea: 1,\n\t\t// \tcropend(): void {\n\t\t// \t\tconst image_data = cropper.getCroppedCanvas().toDataURL();\n\t\t// \t\tdispatch(\"crop\", image_data);\n\t\t// \t}\n\t\t// });\n\n\t\tdispatch(\"crop\", image);\n\t}\n</script>\n\n<img src={image} bind:this={el} alt=\"\" />\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { IconButton } from \"../../../../../atoms\";\n\timport { Undo, Clear, Erase } from \"../../../../../icons\";\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let show_eraser = false;\n</script>\n\n<div>\n\t<IconButton Icon={Undo} label=\"Undo\" on:click={() => dispatch(\"undo\")} />\n\n\t{#if show_eraser}\n\t\t<IconButton\n\t\t\tIcon={Erase}\n\t\t\tlabel=\"Clear\"\n\t\t\ton:click={(event) => {\n\t\t\t\tdispatch(\"clear_mask\");\n\t\t\t\tevent.stopPropagation();\n\t\t\t}}\n\t\t/>\n\t{/if}\n\n\t<IconButton\n\t\tIcon={Clear}\n\t\tlabel=\"Remove Image\"\n\t\ton:click={(event) => {\n\t\t\tdispatch(\"remove_image\");\n\t\t\tevent.stopPropagation();\n\t\t}}\n\t/>\n</div>\n\n<style>\n\tdiv {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: var(--size-2);\n\t\tright: var(--size-2);\n\t\tjustify-content: flex-end;\n\t\tgap: var(--spacing-sm);\n\t\tz-index: var(--layer-5);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { IconButton } from \"../../../../../atoms\";\n\timport { Brush, Color } from \"../../../../../icons\";\n\n\tlet show_size = false;\n\tlet show_col = false;\n\n\texport let brush_radius = 20;\n\texport let brush_color = \"#000\";\n\texport let container_height: number;\n\texport let img_width: number;\n\texport let img_height: number;\n\texport let mode: \"mask\" | \"other\" = \"other\";\n\n\t$: width = container_height * (img_width / img_height);\n</script>\n\n<div class=\"wrap\">\n\t<span class=\"brush\">\n\t\t<IconButton\n\t\t\tIcon={Brush}\n\t\t\tlabel=\"Use brush\"\n\t\t\ton:click={() => (show_size = !show_size)}\n\t\t/>\n\t\t{#if show_size}\n\t\t\t<input\n\t\t\t\taria-label=\"Brush radius\"\n\t\t\t\tbind:value={brush_radius}\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin={0.5 * (img_width / width)}\n\t\t\t\tmax={75 * (img_width / width)}\n\t\t\t/>\n\t\t{/if}\n\t</span>\n\n\t{#if mode !== \"mask\"}\n\t\t<span class=\"col\">\n\t\t\t<IconButton\n\t\t\t\tIcon={Color}\n\t\t\t\tlabel=\"Select brush color\"\n\t\t\t\ton:click={() => (show_col = !show_col)}\n\t\t\t/>\n\t\t\t{#if show_col}\n\t\t\t\t<input aria-label=\"Brush color\" bind:value={brush_color} type=\"color\" />\n\t\t\t{/if}\n\t\t</span>\n\t{/if}\n</div>\n\n<style>\n\t.wrap {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: var(--size-10);\n\t\tright: var(--size-2);\n\t\tflex-direction: column;\n\t\tjustify-content: flex-end;\n\t\tgap: var(--spacing-sm);\n\t\tz-index: var(--layer-5);\n\t}\n\t.brush {\n\t\ttop: 0;\n\t\tright: 0;\n\t}\n\n\t.brush input {\n\t\tposition: absolute;\n\t\ttop: 3px;\n\t\tright: calc(100% + 5px);\n\t}\n\n\t.col input {\n\t\tposition: absolute;\n\t\tright: calc(100% + 5px);\n\t\tbottom: -4px;\n\t}\n</style>\n","<script lang=\"ts\">\n\t// @ts-nocheck\n\timport { createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { BlockLabel } from \"../../../../../atoms\";\n\timport { Image, Sketch as SketchIcon } from \"../../../../../icons\";\n\timport type { SelectData } from \"../../../../../utils\";\n\timport { get_coordinates_of_clicked_image } from \"../shared/utils\";\n\n\timport Cropper from \"./Cropper.svelte\";\n\t// import Sketch from \"./Sketch.svelte\";\n\timport Webcam from \"./Webcam.svelte\";\n\timport ModifySketch from \"./ModifySketch.svelte\";\n\timport SketchSettings from \"./SketchSettings.svelte\";\n\timport {\n\t\tUpload,\n\t\tModifyUpload,\n\t\ttype FileData,\n\t\tnormalise_file\n\t} from \"../../../../../upload\";\n\n\texport let value:\n\t\t| null\n\t\t| { image: string | null; mask: string | null }\n\t\t| FileData;\n\texport let label: string | undefined = undefined;\n\texport let show_label: boolean;\n\n\texport let source: \"canvas\" | \"webcam\" | \"upload\" = \"upload\";\n\texport let tool: \"editor\" | \"select\" | \"sketch\" | \"color-sketch\" = \"editor\";\n\texport let shape: [number, number];\n\texport let streaming = false;\n\texport let pending = false;\n\texport let mirror_webcam: boolean;\n\texport let brush_radius: number;\n\texport let brush_color = \"#000000\";\n\texport let mask_opacity;\n\texport let selectable = false;\n\texport let root: string;\n\n\tlet sketch: Sketch;\n\tlet cropper: Cropper;\n\n\tif (\n\t\tvalue &&\n\t\t(source === \"upload\" || source === \"webcam\") &&\n\t\ttool === \"sketch\"\n\t) {\n\t\tvalue = { image: value as string, mask: null };\n\t}\n\n\tfunction handle_upload({ detail }: CustomEvent<string>): void {\n\t\tif (tool === \"color-sketch\") {\n\t\t\tstatic_image = detail;\n\t\t} else {\n\t\t\tvalue =\n\t\t\t\t(source === \"upload\" || source === \"webcam\") && tool === \"sketch\"\n\t\t\t\t\t? { image: detail, mask: null }\n\t\t\t\t\t: detail;\n\t\t}\n\t\tdispatch(\"upload\", detail);\n\t}\n\n\tfunction handle_clear({ detail }: CustomEvent<null>): void {\n\t\tvalue = null;\n\t\tstatic_image = undefined;\n\t\tdispatch(\"clear\");\n\t}\n\n\tasync function handle_save(\n\t\t{ detail }: { detail: string },\n\t\tinitial\n\t): Promise<void> {\n\t\tif (mode === \"mask\") {\n\t\t\tif (source === \"webcam\" && initial) {\n\t\t\t\tvalue = {\n\t\t\t\t\timage: detail,\n\t\t\t\t\tmask: null\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvalue = {\n\t\t\t\t\timage: typeof value === \"string\" ? value : value?.image || null,\n\t\t\t\t\tmask: detail\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (\n\t\t\t(source === \"upload\" || source === \"webcam\") &&\n\t\t\ttool === \"sketch\"\n\t\t) {\n\t\t\tvalue = { image: detail, mask: null };\n\t\t} else {\n\t\t\tvalue = detail;\n\t\t}\n\n\t\tawait tick();\n\n\t\tdispatch(streaming ? \"stream\" : \"edit\");\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: string | null;\n\t\tstream: string | null;\n\t\tedit: undefined;\n\t\tclear: undefined;\n\t\tdrag: boolean;\n\t\tupload: FileData;\n\t\tselect: SelectData;\n\t}>();\n\n\tlet dragging = false;\n\n\t$: dispatch(\"drag\", dragging);\n\n\tlet value_: null | FileData = null;\n\n\t$: if (value !== value_) {\n\t\tvalue_ = value;\n\t\tnormalise_file(value_, root, null);\n\t}\n\n\t$: console.log(value_);\n\n\tfunction handle_image_load(event: Event): void {\n\t\tconst element = event.currentTarget as HTMLImageElement;\n\t\timg_width = element.naturalWidth;\n\t\timg_height = element.naturalHeight;\n\t\tcontainer_height = element.getBoundingClientRect().height;\n\t}\n\n\tasync function handle_sketch_clear(): Promise<void> {\n\t\tsketch.clear();\n\t\tawait tick();\n\t\tvalue = null;\n\t\tstatic_image = undefined;\n\t}\n\n\tasync function handle_mask_clear(): Promise<void> {\n\t\tsketch.clear_mask();\n\t\tawait tick();\n\t}\n\n\tlet img_height = 0;\n\tlet img_width = 0;\n\tlet container_height = 0;\n\n\tlet mode;\n\n\t$: {\n\t\tif (source === \"canvas\" && tool === \"sketch\") {\n\t\t\tmode = \"bw-sketch\";\n\t\t} else if (tool === \"color-sketch\") {\n\t\t\tmode = \"color-sketch\";\n\t\t} else if (\n\t\t\t(source === \"upload\" || source === \"webcam\") &&\n\t\t\ttool === \"sketch\"\n\t\t) {\n\t\t\tmode = \"mask\";\n\t\t} else {\n\t\t\tmode = \"editor\";\n\t\t}\n\t}\n\tlet value_img;\n\tlet max_height;\n\tlet max_width;\n\n\tlet static_image = undefined;\n\n\t$: {\n\t\tif (value === null || (value.image === null && value.mask === null)) {\n\t\t\tstatic_image = undefined;\n\t\t}\n\t}\n\n\t$: {\n\t\tif (cropper) {\n\t\t\tif (value) {\n\t\t\t\tcropper.image = value;\n\t\t\t\tcropper.create();\n\t\t\t} else {\n\t\t\t\tcropper.destroy();\n\t\t\t}\n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\tif (tool === \"color-sketch\" && value && typeof value === \"string\") {\n\t\t\tstatic_image = value;\n\t\t\tawait tick();\n\t\t\thandle_image_load({ currentTarget: value_img });\n\t\t}\n\t});\n\n\tfunction handle_click(evt: MouseEvent): void {\n\t\tlet coordinates = get_coordinates_of_clicked_image(evt);\n\t\tif (coordinates) {\n\t\t\tdispatch(\"select\", { index: coordinates, value: null });\n\t\t}\n\t}\n</script>\n\n<BlockLabel\n\t{show_label}\n\tIcon={source === \"canvas\" ? SketchIcon : Image}\n\tlabel={label || (source === \"canvas\" ? \"Sketch\" : \"Image\")}\n/>\n\n<div\n\tdata-testid=\"image\"\n\tclass=\"image-container\"\n\tbind:offsetHeight={max_height}\n\tbind:offsetWidth={max_width}\n>\n\t{#if source === \"upload\"}\n\t\t<Upload\n\t\t\tbind:dragging\n\t\t\tfiletype=\"image/*\"\n\t\t\ton:load={handle_upload}\n\t\t\tinclude_file_metadata={false}\n\t\t\tdisable_click={!!value}\n\t\t\t{root}\n\t\t>\n\t\t\t{#if (value === null && !static_image) || streaming}\n\t\t\t\t<slot />\n\t\t\t{:else if tool === \"select\"}\n\t\t\t\t<Cropper\n\t\t\t\t\tbind:this={cropper}\n\t\t\t\t\timage={value_.data}\n\t\t\t\t\ton:crop={handle_save}\n\t\t\t\t/>\n\t\t\t\t<ModifyUpload on:clear={(e) => (handle_clear(e), (tool = \"editor\"))} />\n\t\t\t{:else if tool === \"editor\"}\n\t\t\t\t<ModifyUpload\n\t\t\t\t\ton:edit={() => (tool = \"select\")}\n\t\t\t\t\ton:clear={handle_clear}\n\t\t\t\t\teditable\n\t\t\t\t/>\n\n\t\t\t\t<!-- TODO: fix-->\n\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\t\t\t\t<img\n\t\t\t\t\tsrc={value_.data}\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tclass:scale-x-[-1]={source === \"webcam\" && mirror_webcam}\n\t\t\t\t\tclass:selectable\n\t\t\t\t\ton:click={handle_click}\n\t\t\t\t/>\n\t\t\t{:else if (tool === \"sketch\" || tool === \"color-sketch\") && (value !== null || static_image)}\n\t\t\t\t{#key static_image}\n\t\t\t\t\t<img\n\t\t\t\t\t\tbind:this={value_img}\n\t\t\t\t\t\tclass=\"absolute-img\"\n\t\t\t\t\t\tsrc={static_image || value?.image || value}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\ton:load={handle_image_load}\n\t\t\t\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\t\t\t/>\n\t\t\t\t{/key}\n\t\t\t\t{#if img_width > 0}\n\t\t\t\t\t<!-- <Sketch\n\t\t\t\t\t\t{value}\n\t\t\t\t\t\tbind:this={sketch}\n\t\t\t\t\t\tbind:brush_radius\n\t\t\t\t\t\tbind:brush_color\n\t\t\t\t\t\t{mask_opacity}\n\t\t\t\t\t\ton:change={handle_save}\n\t\t\t\t\t\t{mode}\n\t\t\t\t\t\twidth={img_width || max_width}\n\t\t\t\t\t\theight={img_height || max_height}\n\t\t\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t\t\t{value_img}\n\t\t\t\t\t\t{source}\n\t\t\t\t\t\t{shape}\n\t\t\t\t\t/> -->\n\t\t\t\t\t<ModifySketch\n\t\t\t\t\t\tshow_eraser={value_img}\n\t\t\t\t\t\ton:undo={() => sketch.undo()}\n\t\t\t\t\t\ton:clear_mask={handle_mask_clear}\n\t\t\t\t\t\ton:remove_image={handle_sketch_clear}\n\t\t\t\t\t/>\n\t\t\t\t\t{#if tool === \"color-sketch\" || tool === \"sketch\"}\n\t\t\t\t\t\t<SketchSettings\n\t\t\t\t\t\t\tbind:brush_radius\n\t\t\t\t\t\t\tbind:brush_color\n\t\t\t\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t\t\t\timg_width={img_width || max_width}\n\t\t\t\t\t\t\timg_height={img_height || max_height}\n\t\t\t\t\t\t\t{mode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/if}\n\t\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t\t<!-- TODO: fix-->\n\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\t\t\t\t<img\n\t\t\t\t\tsrc={value.image || value.data}\n\t\t\t\t\talt=\"hello\"\n\t\t\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\t\t\tclass:selectable\n\t\t\t\t\ton:click={handle_click}\n\t\t\t\t/>\n\t\t\t{/if}\n\t\t</Upload>\n\t{:else if source === \"canvas\"}\n\t\t<ModifySketch\n\t\t\ton:undo={() => sketch.undo()}\n\t\t\ton:remove_image={handle_sketch_clear}\n\t\t/>\n\t\t{#if tool === \"color-sketch\"}\n\t\t\t<SketchSettings\n\t\t\t\tbind:brush_radius\n\t\t\t\tbind:brush_color\n\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\timg_width={img_width || max_width}\n\t\t\t\timg_height={img_height || max_height}\n\t\t\t/>\n\t\t{/if}\n\t\t<!-- <Sketch\n\t\t\t{value}\n\t\t\tbind:brush_radius\n\t\t\tbind:brush_color\n\t\t\tbind:this={sketch}\n\t\t\ton:change={handle_save}\n\t\t\ton:clear={handle_sketch_clear}\n\t\t\t{mode}\n\t\t\twidth={img_width || max_width}\n\t\t\theight={img_height || max_height}\n\t\t\tcontainer_height={container_height || max_height}\n\t\t\t{shape}\n\t\t/> -->\n\t{:else if (value === null && !static_image) || streaming}\n\t\t{#if source === \"webcam\" && !static_image}\n\t\t\t<Webcam\n\t\t\t\ton:capture={(e) =>\n\t\t\t\t\ttool === \"color-sketch\" ? handle_upload(e) : handle_save(e, true)}\n\t\t\t\ton:stream={handle_save}\n\t\t\t\ton:error\n\t\t\t\t{streaming}\n\t\t\t\t{pending}\n\t\t\t\t{mirror_webcam}\n\t\t\t/>\n\t\t{/if}\n\t{:else if tool === \"select\"}\n\t\t<Cropper bind:this={cropper} image={value.data} on:crop={handle_save} />\n\t\t<ModifyUpload on:clear={(e) => (handle_clear(e), (tool = \"editor\"))} />\n\t{:else if tool === \"editor\"}\n\t\t<ModifyUpload\n\t\t\ton:edit={() => (tool = \"select\")}\n\t\t\ton:clear={handle_clear}\n\t\t\teditable\n\t\t/>\n\n\t\t<!-- TODO: fix -->\n\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\t\t<img\n\t\t\tsrc={value_}\n\t\t\talt=\"\"\n\t\t\tclass:selectable\n\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\ton:click={handle_click}\n\t\t/>\n\t{:else if (tool === \"sketch\" || tool === \"color-sketch\") && (value !== null || static_image)}\n\t\t{#key static_image}\n\t\t\t<img\n\t\t\t\tbind:this={value_img}\n\t\t\t\tclass=\"absolute-img\"\n\t\t\t\tsrc={static_image || value_}\n\t\t\t\talt=\"\"\n\t\t\t\ton:load={handle_image_load}\n\t\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\t/>\n\t\t{/key}\n\t\t{#if img_width > 0}\n\t\t\t<!-- <Sketch\n\t\t\t\t{value}\n\t\t\t\tbind:this={sketch}\n\t\t\t\tbind:brush_radius\n\t\t\t\tbind:brush_color\n\t\t\t\ton:change={handle_save}\n\t\t\t\t{mode}\n\t\t\t\twidth={img_width || max_width}\n\t\t\t\theight={img_height || max_height}\n\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t{value_img}\n\t\t\t\t{source}\n\t\t\t/> -->\n\t\t\t<ModifySketch\n\t\t\t\ton:undo={() => sketch.undo()}\n\t\t\t\ton:remove_image={handle_sketch_clear}\n\t\t\t/>\n\t\t\t{#if tool === \"color-sketch\" || tool === \"sketch\"}\n\t\t\t\t<SketchSettings\n\t\t\t\t\tbind:brush_radius\n\t\t\t\t\tbind:brush_color\n\t\t\t\t\tcontainer_height={container_height || max_height}\n\t\t\t\t\timg_width={img_width || max_width}\n\t\t\t\t\timg_height={img_height || max_height}\n\t\t\t\t\t{mode}\n\t\t\t\t/>\n\t\t\t{/if}\n\t\t{/if}\n\t{:else}\n\t\t<!-- TODO: fix -->\n\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t<!-- svelte-ignore a11y-no-noninteractive-element-interactions-->\n\n\t\t<img\n\t\t\tsrc={value_.image || value_.data}\n\t\t\talt=\"\"\n\t\t\tclass:webcam={source === \"webcam\" && mirror_webcam}\n\t\t\tclass:selectable\n\t\t\ton:click={handle_click}\n\t\t/>\n\t{/if}\n</div>\n\n<style>\n\t.image-container,\n\timg {\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t}\n\timg {\n\t\tobject-fit: contain;\n\t}\n\n\t.selectable {\n\t\tcursor: crosshair;\n\t}\n\n\t.absolute-img {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t}\n\n\t.webcam {\n\t\ttransform: scaleX(-1);\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData, ShareData } from \"../../../../../utils\";\n\timport Image from \"./Image.svelte\";\n\n\timport { Block } from \"../../../../../atoms\";\n\timport { _ } from \"svelte-i18n\";\n\timport { StatusTracker } from \"../../../../../statustracker\";\n\timport type { LoadingStatus } from \"../../../../../statustracker\";\n\timport { UploadText } from \"../../../../../atoms\";\n\timport type { FileData } from \"js/upload/src\";\n\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: null | FileData = null;\n\texport let source: \"canvas\" | \"webcam\" | \"upload\" = \"upload\";\n\texport let tool: \"editor\" | \"select\" | \"sketch\" | \"color-sketch\" = \"editor\";\n\texport let label: string;\n\texport let show_label: boolean;\n\texport let streaming: boolean;\n\texport let pending: boolean;\n\texport let height: number | undefined;\n\texport let width: number | undefined;\n\texport let mirror_webcam: boolean;\n\texport let shape: [number, number];\n\texport let brush_radius: number;\n\texport let brush_color: string;\n\texport let mask_opacity: number;\n\texport let selectable = false;\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let root: string;\n\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\terror: string;\n\t\tedit: never;\n\t\tstream: never;\n\t\tdrag: never;\n\t\tupload: never;\n\t\tclear: never;\n\t\tselect: SelectData;\n\t\tshare: ShareData;\n\t}>;\n\n\t$: value, gradio.dispatch(\"change\");\n\tlet dragging: boolean;\n\tconst FIXED_HEIGHT = 240;\n\n\t$: value = !value ? null : value;\n</script>\n\n<Block\n\t{visible}\n\tvariant={value === null && source === \"upload\" ? \"dashed\" : \"solid\"}\n\tborder_mode={dragging ? \"focus\" : \"base\"}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\theight={height || (source === \"webcam\" ? undefined : FIXED_HEIGHT)}\n\t{width}\n\tallow_overflow={false}\n\t{container}\n\t{scale}\n\t{min_width}\n>\n\t<StatusTracker {...loading_status} />\n\n\t<Image\n\t\t{brush_radius}\n\t\t{brush_color}\n\t\t{shape}\n\t\tbind:value\n\t\t{source}\n\t\t{tool}\n\t\t{selectable}\n\t\t{mask_opacity}\n\t\t{root}\n\t\ton:edit={() => gradio.dispatch(\"edit\")}\n\t\ton:clear={() => gradio.dispatch(\"clear\")}\n\t\ton:stream={() => gradio.dispatch(\"stream\")}\n\t\ton:drag={({ detail }) => (dragging = detail)}\n\t\ton:upload={() => gradio.dispatch(\"upload\")}\n\t\ton:select={({ detail }) => gradio.dispatch(\"select\", detail)}\n\t\ton:share={({ detail }) => gradio.dispatch(\"share\", detail)}\n\t\ton:error={({ detail }) => {\n\t\t\tloading_status = loading_status || {};\n\t\t\tloading_status.status = \"error\";\n\t\t\tgradio.dispatch(\"error\", detail);\n\t\t}}\n\t\t{label}\n\t\t{show_label}\n\t\t{pending}\n\t\t{streaming}\n\t\t{mirror_webcam}\n\t>\n\t\t<UploadText type=\"image\" />\n\t</Image>\n</Block>\n"],"names":["ctx","insert_dev","target","button","anchor","is_function","div","create_if_block","append_dev","video","video_source","canvas","streaming","$$props","pending","mode","mirror_webcam","include_audio","dispatch","createEventDispatcher","onMount","access_webcam","stream","err","$_","take_picture","context","data","recording","recorded_blobs","mimeType","media_recorder","take_recording","video_blob","ReaderObj","e","validMimeTypes","validMimeType","$$invalidate","$$value","attr_dev","img","img_src_value","destroy","image","el","create","Erase","Undo","Clear","show_eraser","click_handler","event","input","Color","create_if_block_1","span","Brush","create_if_block_2","if_block1","show_size","show_col","brush_radius","brush_color","container_height","img_width","img_height","to_number","click_handler_1","width","src_url_equal","dirty","if_block","create_if_block_14","cropper_1_props","cropper_1_changes","create_if_block_10","create_if_block_8","create_if_block_15","sketchsettings_changes","create_if_block_5","current","create_if_block_6","SketchIcon","Image","blocklabel_changes","value","label","show_label","source","tool","shape","mask_opacity","selectable","root","sketch","cropper","handle_upload","detail","static_image","handle_clear","handle_save","initial","tick","dragging","value_","handle_image_load","element","handle_sketch_clear","handle_mask_clear","value_img","max_height","max_width","handle_click","evt","coordinates","get_coordinates_of_clicked_image","clear_handler","edit_handler","undo_handler","undo_handler_1","clear_handler_1","edit_handler_1","undo_handler_2","normalise_file","FIXED_HEIGHT","block_changes","elem_id","elem_classes","visible","height","container","scale","min_width","loading_status","gradio","select_handler","share_handler"],"mappings":"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"}