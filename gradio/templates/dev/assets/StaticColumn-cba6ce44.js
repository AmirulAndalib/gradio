import{SvelteComponentDev as p,init as S,safe_not_equal as C,dispatch_dev as v,create_slot as E,validate_slots as P,element as y,attr_dev as w,null_to_empty as g,toggle_class as m,set_style as f,add_location as j,insert_dev as k,update_slot_base as O,get_all_dirty_from_scope as R,get_slot_changes as q,transition_in as B,transition_out as D,detach_dev as N}from"../../../node/dev/svelte-internal.js";import"./index-168e7816.js";const U="Users/peterallen/Projects/gradio/js/column/static/StaticColumn.svelte";function d(o){let e,s,u=`calc(min(${o[2]}px, 100%))`,l;const r=o[8].default,c=E(r,o,o[7],null),h={c:function(){e=y("div"),c&&c.c(),w(e,"id",o[3]),w(e,"class",s=g(o[4].join(" "))+" svelte-1m1obck"),m(e,"gap",o[1]),m(e,"compact",o[6]==="compact"),m(e,"panel",o[6]==="panel"),m(e,"hide",!o[5]),f(e,"flex-grow",o[0]),f(e,"min-width",u),j(e,U,10,0,217)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,i){k(n,e,i),c&&c.m(e,null),l=!0},p:function(n,[i]){c&&c.p&&(!l||i&128)&&O(c,r,n,n[7],l?q(r,n[7],i,null):R(n[7]),null),(!l||i&8)&&w(e,"id",n[3]),(!l||i&16&&s!==(s=g(n[4].join(" "))+" svelte-1m1obck"))&&w(e,"class",s),(!l||i&18)&&m(e,"gap",n[1]),(!l||i&80)&&m(e,"compact",n[6]==="compact"),(!l||i&80)&&m(e,"panel",n[6]==="panel"),(!l||i&48)&&m(e,"hide",!n[5]),i&1&&f(e,"flex-grow",n[0]),i&4&&u!==(u=`calc(min(${n[2]}px, 100%))`)&&f(e,"min-width",u)},i:function(n){l||(B(c,n),l=!0)},o:function(n){D(c,n),l=!1},d:function(n){n&&N(e),c&&c.d(n)}};return v("SvelteRegisterBlock",{block:h,id:d.name,type:"component",source:"",ctx:o}),h}function z(o,e,s){let{$$slots:u={},$$scope:l}=e;P("StaticColumn",u,["default"]);let{scale:r=null}=e,{gap:c=!0}=e,{min_width:h=0}=e,{elem_id:a=""}=e,{elem_classes:n=[]}=e,{visible:i=!0}=e,{variant:_="default"}=e;const b=["scale","gap","min_width","elem_id","elem_classes","visible","variant"];return Object.keys(e).forEach(t=>{!~b.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<StaticColumn> was created with unknown prop '${t}'`)}),o.$$set=t=>{"scale"in t&&s(0,r=t.scale),"gap"in t&&s(1,c=t.gap),"min_width"in t&&s(2,h=t.min_width),"elem_id"in t&&s(3,a=t.elem_id),"elem_classes"in t&&s(4,n=t.elem_classes),"visible"in t&&s(5,i=t.visible),"variant"in t&&s(6,_=t.variant),"$$scope"in t&&s(7,l=t.$$scope)},o.$capture_state=()=>({scale:r,gap:c,min_width:h,elem_id:a,elem_classes:n,visible:i,variant:_}),o.$inject_state=t=>{"scale"in t&&s(0,r=t.scale),"gap"in t&&s(1,c=t.gap),"min_width"in t&&s(2,h=t.min_width),"elem_id"in t&&s(3,a=t.elem_id),"elem_classes"in t&&s(4,n=t.elem_classes),"visible"in t&&s(5,i=t.visible),"variant"in t&&s(6,_=t.variant)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[r,c,h,a,n,i,_,l,u]}class G extends p{constructor(e){super(e),S(this,e,z,d,C,{scale:0,gap:1,min_width:2,elem_id:3,elem_classes:4,visible:5,variant:6}),v("SvelteRegisterComponent",{component:this,tagName:"StaticColumn",options:e,id:d.name})}get scale(){throw new Error("<StaticColumn>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set scale(e){throw new Error("<StaticColumn>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get gap(){throw new Error("<StaticColumn>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set gap(e){throw new Error("<StaticColumn>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get min_width(){throw new Error("<StaticColumn>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set min_width(e){throw new Error("<StaticColumn>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_id(){throw new Error("<StaticColumn>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<StaticColumn>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_classes(){throw new Error("<StaticColumn>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_classes(e){throw new Error("<StaticColumn>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<StaticColumn>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<StaticColumn>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get variant(){throw new Error("<StaticColumn>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set variant(e){throw new Error("<StaticColumn>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{G as S};
//# sourceMappingURL=StaticColumn-cba6ce44.js.map
