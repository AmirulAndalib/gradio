import{SvelteComponentDev as j,init as S,safe_not_equal as D,dispatch_dev as y,validate_slots as O,createEventDispatcher as w,afterUpdate as g,element as p,space as R,text as T,attr_dev as h,add_location as v,toggle_class as k,insert_dev as U,append_dev as _,listen_dev as x,prop_dev as q,set_data_dev as B,noop as C,detach_dev as N,run_all as z}from"../../../node/dev/svelte-internal.js";import"./index-0c627992.js";const f="Users/peterallen/Projects/gradio/js/checkbox/shared/Checkbox.svelte";function m(o){let e,t,b,d,s,l,u;const i={c:function(){e=p("label"),t=p("input"),b=R(),d=p("span"),s=T(o[2]),t.disabled=o[1],h(t,"type","checkbox"),h(t,"name","test"),h(t,"data-testid","checkbox"),h(t,"class","svelte-8xl2dc"),v(t,f,28,1,458),h(d,"class","ml-2 svelte-8xl2dc"),v(d,f,43,1,732),h(e,"class","svelte-8xl2dc"),k(e,"disabled",o[1]),v(e,f,27,0,434)},l:function(c){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(c,r){U(c,e,r),_(e,t),t.checked=o[0],_(e,b),_(e,d),_(d,s),l||(u=[x(t,"change",o[5]),x(t,"input",o[6],!1,!1,!1,!1)],l=!0)},p:function(c,[r]){r&2&&q(t,"disabled",c[1]),r&1&&(t.checked=c[0]),r&4&&B(s,c[2]),r&2&&k(e,"disabled",c[1])},i:C,o:C,d:function(c){c&&N(e),l=!1,z(u)}};return y("SvelteRegisterBlock",{block:i,id:m.name,type:"component",source:"",ctx:o}),i}function A(o,e,t){let{$$slots:b={},$$scope:d}=e;O("Checkbox",b,[]);let{value:s}=e,{value_is_output:l=!1}=e,{disabled:u=!1}=e,{label:i}=e;const a=w();function c(){a("change",s),l||a("input")}g(()=>{t(4,l=!1)}),o.$$.on_mount.push(function(){s===void 0&&!("value"in e||o.$$.bound[o.$$.props.value])&&console.warn("<Checkbox> was created without expected prop 'value'"),i===void 0&&!("label"in e||o.$$.bound[o.$$.props.label])&&console.warn("<Checkbox> was created without expected prop 'label'")});const r=["value","value_is_output","disabled","label"];Object.keys(e).forEach(n=>{!~r.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<Checkbox> was created with unknown prop '${n}'`)});function E(){s=this.checked,t(0,s)}const P=n=>{t(0,s=n.currentTarget.checked),a("select",{index:0,value:i,selected:n.currentTarget.checked})};return o.$$set=n=>{"value"in n&&t(0,s=n.value),"value_is_output"in n&&t(4,l=n.value_is_output),"disabled"in n&&t(1,u=n.disabled),"label"in n&&t(2,i=n.label)},o.$capture_state=()=>({createEventDispatcher:w,afterUpdate:g,value:s,value_is_output:l,disabled:u,label:i,dispatch:a,handle_change:c}),o.$inject_state=n=>{"value"in n&&t(0,s=n.value),"value_is_output"in n&&t(4,l=n.value_is_output),"disabled"in n&&t(1,u=n.disabled),"label"in n&&t(2,i=n.label)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),o.$$.update=()=>{o.$$.dirty&1&&c()},[s,u,i,a,l,E,P]}class H extends j{constructor(e){super(e),S(this,e,A,m,D,{value:0,value_is_output:4,disabled:1,label:2}),y("SvelteRegisterComponent",{component:this,tagName:"Checkbox",options:e,id:m.name})}get value(){throw new Error("<Checkbox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Checkbox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value_is_output(){throw new Error("<Checkbox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value_is_output(e){throw new Error("<Checkbox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disabled(){throw new Error("<Checkbox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disabled(e){throw new Error("<Checkbox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<Checkbox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Checkbox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{H as C};
//# sourceMappingURL=Checkbox-3ef9249a.js.map
