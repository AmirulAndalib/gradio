import{SvelteComponentDev as O,init as z,safe_not_equal as D,dispatch_dev as f,validate_slots as N,createEventDispatcher as y,getContext as E,validate_store as P,component_subscribe as j,onMount as k,tick as C,create_slot as q,element as W,create_component as A,attr_dev as g,set_style as R,add_location as X,insert_dev as Y,mount_component as M,transition_in as p,transition_out as T,detach_dev as Z,destroy_component as U,update_slot_base as F,get_all_dirty_from_scope as G,get_slot_changes as H}from"../../../node/dev/svelte-internal.js";import"./index-0c627992.js";import{T as B}from"./StaticTabs-55b38066.js";import{S as J}from"./StaticColumn-de58b635.js";const x="Users/peterallen/Projects/gradio/js/tabitem/static/TabItem.svelte";function K(t){let e;const o=t[8].default,i=q(o,t,t[9],null),l={c:function(){i&&i.c()},m:function(n,s){i&&i.m(n,s),e=!0},p:function(n,s){i&&i.p&&(!e||s&512)&&F(i,o,n,n[9],e?H(o,n[9],s,null):G(n[9]),null)},i:function(n){e||(p(i,n),e=!0)},o:function(n){T(i,n),e=!1},d:function(n){i&&i.d(n)}};return f("SvelteRegisterBlock",{block:l,id:K.name,type:"slot",source:"(23:1) <Column>",ctx:t}),l}function I(t){let e,o,i,l;o=new J({props:{$$slots:{default:[K]},$$scope:{ctx:t}},$$inline:!0});const c={c:function(){e=W("div"),A(o.$$.fragment),g(e,"id",t[0]),g(e,"class",i="tabitem "+t[1].join(" ")+" svelte-ztmw93"),R(e,"display",t[3]===t[2]?"block":"none"),X(e,x,26,0,641)},l:function(s){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(s,m){Y(s,e,m),M(o,e,null),l=!0},p:function(s,[m]){const u={};m&512&&(u.$$scope={dirty:m,ctx:s}),o.$set(u),(!l||m&1)&&g(e,"id",s[0]),(!l||m&2&&i!==(i="tabitem "+s[1].join(" ")+" svelte-ztmw93"))&&g(e,"class",i),m&12&&R(e,"display",s[3]===s[2]?"block":"none")},i:function(s){l||(p(o.$$.fragment,s),l=!0)},o:function(s){T(o.$$.fragment,s),l=!1},d:function(s){s&&Z(e),U(o)}};return f("SvelteRegisterBlock",{block:c,id:I.name,type:"component",source:"",ctx:t}),c}function $(t,e,o){let i,l,{$$slots:c={},$$scope:n}=e;N("TabItem",c,["default"]);let{elem_id:s=""}=e,{elem_classes:m=[]}=e,{name:u}=e,{id:d={}}=e;const _=y(),{register_tab:a,unregister_tab:S,selected_tab:b,selected_tab_index:h}=E(B);P(b,"selected_tab"),j(t,b,r=>o(3,l=r)),P(h,"selected_tab_index"),j(t,h,r=>o(7,i=r));let w=a({name:u,id:d});k(()=>()=>S({name:u,id:d})),t.$$.on_mount.push(function(){u===void 0&&!("name"in e||t.$$.bound[t.$$.props.name])&&console.warn("<TabItem> was created without expected prop 'name'")});const V=["elem_id","elem_classes","name","id"];return Object.keys(e).forEach(r=>{!~V.indexOf(r)&&r.slice(0,2)!=="$$"&&r!=="slot"&&console.warn(`<TabItem> was created with unknown prop '${r}'`)}),t.$$set=r=>{"elem_id"in r&&o(0,s=r.elem_id),"elem_classes"in r&&o(1,m=r.elem_classes),"name"in r&&o(6,u=r.name),"id"in r&&o(2,d=r.id),"$$scope"in r&&o(9,n=r.$$scope)},t.$capture_state=()=>({getContext:E,onMount:k,createEventDispatcher:y,tick:C,TABS:B,Column:J,elem_id:s,elem_classes:m,name:u,id:d,dispatch:_,register_tab:a,unregister_tab:S,selected_tab:b,selected_tab_index:h,tab_index:w,$selected_tab_index:i,$selected_tab:l}),t.$inject_state=r=>{"elem_id"in r&&o(0,s=r.elem_id),"elem_classes"in r&&o(1,m=r.elem_classes),"name"in r&&o(6,u=r.name),"id"in r&&o(2,d=r.id),"tab_index"in r&&o(13,w=r.tab_index)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),t.$$.update=()=>{t.$$.dirty&192&&i===w&&C().then(()=>_("select",{value:u,index:w}))},[s,m,d,l,b,h,u,i,c,n]}class L extends O{constructor(e){super(e),z(this,e,$,I,D,{elem_id:0,elem_classes:1,name:6,id:2}),f("SvelteRegisterComponent",{component:this,tagName:"TabItem",options:e,id:I.name})}get elem_id(){throw new Error("<TabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<TabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_classes(){throw new Error("<TabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_classes(e){throw new Error("<TabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get name(){throw new Error("<TabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set name(e){throw new Error("<TabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get id(){throw new Error("<TabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set id(e){throw new Error("<TabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}function Q(t){let e;const o=t[5].default,i=q(o,t,t[7],null),l={c:function(){i&&i.c()},m:function(n,s){i&&i.m(n,s),e=!0},p:function(n,s){i&&i.p&&(!e||s&128)&&F(i,o,n,n[7],e?H(o,n[7],s,null):G(n[7]),null)},i:function(n){e||(p(i,n),e=!0)},o:function(n){T(i,n),e=!1},d:function(n){i&&i.d(n)}};return f("SvelteRegisterBlock",{block:l,id:Q.name,type:"slot",source:'(9:0) <TabItem  {elem_id}  {elem_classes}  name={label}  {id}  on:select={({ detail }) => gradio.dispatch(\\"select\\", detail)} >',ctx:t}),l}function v(t){let e,o;e=new L({props:{elem_id:t[0],elem_classes:t[1],name:t[2],id:t[3],$$slots:{default:[Q]},$$scope:{ctx:t}},$$inline:!0}),e.$on("select",t[6]);const i={c:function(){A(e.$$.fragment)},l:function(c){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(c,n){M(e,c,n),o=!0},p:function(c,[n]){const s={};n&1&&(s.elem_id=c[0]),n&2&&(s.elem_classes=c[1]),n&4&&(s.name=c[2]),n&8&&(s.id=c[3]),n&128&&(s.$$scope={dirty:n,ctx:c}),e.$set(s)},i:function(c){o||(p(e.$$.fragment,c),o=!0)},o:function(c){T(e.$$.fragment,c),o=!1},d:function(c){U(e,c)}};return f("SvelteRegisterBlock",{block:i,id:v.name,type:"component",source:"",ctx:t}),i}function ee(t,e,o){let{$$slots:i={},$$scope:l}=e;N("StaticTabItem",i,["default"]);let{elem_id:c=""}=e,{elem_classes:n=[]}=e,{label:s}=e,{id:m}=e,{gradio:u}=e;t.$$.on_mount.push(function(){s===void 0&&!("label"in e||t.$$.bound[t.$$.props.label])&&console.warn("<StaticTabItem> was created without expected prop 'label'"),m===void 0&&!("id"in e||t.$$.bound[t.$$.props.id])&&console.warn("<StaticTabItem> was created without expected prop 'id'"),u===void 0&&!("gradio"in e||t.$$.bound[t.$$.props.gradio])&&console.warn("<StaticTabItem> was created without expected prop 'gradio'")});const d=["elem_id","elem_classes","label","id","gradio"];Object.keys(e).forEach(a=>{!~d.indexOf(a)&&a.slice(0,2)!=="$$"&&a!=="slot"&&console.warn(`<StaticTabItem> was created with unknown prop '${a}'`)});const _=({detail:a})=>u.dispatch("select",a);return t.$$set=a=>{"elem_id"in a&&o(0,c=a.elem_id),"elem_classes"in a&&o(1,n=a.elem_classes),"label"in a&&o(2,s=a.label),"id"in a&&o(3,m=a.id),"gradio"in a&&o(4,u=a.gradio),"$$scope"in a&&o(7,l=a.$$scope)},t.$capture_state=()=>({TabItem:L,elem_id:c,elem_classes:n,label:s,id:m,gradio:u}),t.$inject_state=a=>{"elem_id"in a&&o(0,c=a.elem_id),"elem_classes"in a&&o(1,n=a.elem_classes),"label"in a&&o(2,s=a.label),"id"in a&&o(3,m=a.id),"gradio"in a&&o(4,u=a.gradio)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),[c,n,s,m,u,i,_,l]}class te extends O{constructor(e){super(e),z(this,e,ee,v,D,{elem_id:0,elem_classes:1,label:2,id:3,gradio:4}),f("SvelteRegisterComponent",{component:this,tagName:"StaticTabItem",options:e,id:v.name})}get elem_id(){throw new Error("<StaticTabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<StaticTabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_classes(){throw new Error("<StaticTabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_classes(e){throw new Error("<StaticTabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<StaticTabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<StaticTabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get id(){throw new Error("<StaticTabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set id(e){throw new Error("<StaticTabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get gradio(){throw new Error("<StaticTabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set gradio(e){throw new Error("<StaticTabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}const ce=te;export{ce as default};
//# sourceMappingURL=index-38a41fb0.js.map
