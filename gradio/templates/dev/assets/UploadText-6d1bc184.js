import{SvelteComponentDev as S,init as C,safe_not_equal as O,dispatch_dev as P,validate_store as R,component_subscribe as q,validate_slots as B,element as U,text as _,space as b,attr_dev as j,add_location as T,insert_dev as D,append_dev as l,set_data_dev as h,noop as k,detach_dev as N}from"../../../node/dev/svelte-internal.js";import{X as w}from"./index-0c627992.js";import"./Button-9bfe2272.js";const E="Users/peterallen/Projects/gradio/js/atoms/src/UploadText.svelte";function y(o){let e,s=o[1](o[2][o[0]])+"",i,u,a,r,c=o[1]("common.or")+"",d,t,g,m=o[1]("upload_text.click_to_upload")+"",f;const x={c:function(){e=U("div"),i=_(s),u=b(),a=U("span"),r=_("- "),d=_(c),t=_(" -"),g=b(),f=_(m),j(a,"class","or svelte-1seyty4"),T(a,E,16,1,322),j(e,"class","wrap svelte-1seyty4"),T(e,E,14,0,284)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,p){D(n,e,p),l(e,i),l(e,u),l(e,a),l(a,r),l(a,d),l(a,t),l(e,g),l(e,f)},p:function(n,[p]){p&3&&s!==(s=n[1](n[2][n[0]])+"")&&h(i,s),p&2&&c!==(c=n[1]("common.or")+"")&&h(d,c),p&2&&m!==(m=n[1]("upload_text.click_to_upload")+"")&&h(f,m)},i:k,o:k,d:function(n){n&&N(e)}};return P("SvelteRegisterBlock",{block:x,id:y.name,type:"component",source:"",ctx:o}),x}function X(o,e,s){let i;R(w,"_"),q(o,w,t=>s(1,i=t));let{$$slots:u={},$$scope:a}=e;B("UploadText",u,[]);let{type:r="file"}=e;const c={image:"upload_text.drop_image",video:"upload_text.drop_video",audio:"upload_text.drop_audio",file:"upload_text.drop_file",csv:"upload_text.drop_csv"},d=["type"];return Object.keys(e).forEach(t=>{!~d.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<UploadText> was created with unknown prop '${t}'`)}),o.$$set=t=>{"type"in t&&s(0,r=t.type)},o.$capture_state=()=>({_:w,type:r,defs:c,$_:i}),o.$inject_state=t=>{"type"in t&&s(0,r=t.type)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[r,i,c]}class G extends S{constructor(e){super(e),C(this,e,X,y,O,{type:0}),P("SvelteRegisterComponent",{component:this,tagName:"UploadText",options:e,id:y.name})}get type(){throw new Error("<UploadText>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set type(e){throw new Error("<UploadText>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{G as U};
//# sourceMappingURL=UploadText-6d1bc184.js.map
