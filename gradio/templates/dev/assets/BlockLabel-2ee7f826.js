import{SvelteComponentDev as p,init as k,safe_not_equal as B,dispatch_dev as v,validate_slots as L,element as d,create_component as y,space as E,text as I,attr_dev as f,add_location as _,toggle_class as u,insert_dev as P,append_dev as w,mount_component as j,set_data_dev as S,transition_in as z,transition_out as C,detach_dev as O,destroy_component as R}from"../../../node/dev/svelte-internal.js";import"./index-168e7816.js";import"./Button-e33227ec.js";const g="Users/peterallen/Projects/gradio/js/atoms/src/BlockLabel.svelte";function m(n){let e,s,r,h,i,l;r=new n[1]({$$inline:!0});const b={c:function(){e=d("div"),s=d("span"),y(r.$$.fragment),h=E(),i=I(n[0]),f(s,"class","svelte-juloz6"),_(s,g,15,1,285),f(e,"data-testid","block-label"),f(e,"class","svelte-juloz6"),u(e,"hide",!n[2]),u(e,"sr-only",!n[2]),u(e,"float",n[4]),u(e,"hide-label",n[3]),_(e,g,8,0,154)},l:function(o){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(o,a){P(o,e,a),w(e,s),j(r,s,null),w(e,h),w(e,i),l=!0},p:function(o,[a]){(!l||a&1)&&S(i,o[0]),(!l||a&4)&&u(e,"hide",!o[2]),(!l||a&4)&&u(e,"sr-only",!o[2]),(!l||a&16)&&u(e,"float",o[4]),(!l||a&8)&&u(e,"hide-label",o[3])},i:function(o){l||(z(r.$$.fragment,o),l=!0)},o:function(o){C(r.$$.fragment,o),l=!1},d:function(o){o&&O(e),R(r)}};return v("SvelteRegisterBlock",{block:b,id:m.name,type:"component",source:"",ctx:n}),b}function q(n,e,s){let{$$slots:r={},$$scope:h}=e;L("BlockLabel",r,[]);let{label:i=null}=e,{Icon:l}=e,{show_label:b=!0}=e,{disable:c=!1}=e,{float:o=!0}=e;n.$$.on_mount.push(function(){l===void 0&&!("Icon"in e||n.$$.bound[n.$$.props.Icon])&&console.warn("<BlockLabel> was created without expected prop 'Icon'")});const a=["label","Icon","show_label","disable","float"];return Object.keys(e).forEach(t=>{!~a.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<BlockLabel> was created with unknown prop '${t}'`)}),n.$$set=t=>{"label"in t&&s(0,i=t.label),"Icon"in t&&s(1,l=t.Icon),"show_label"in t&&s(2,b=t.show_label),"disable"in t&&s(3,c=t.disable),"float"in t&&s(4,o=t.float)},n.$capture_state=()=>({label:i,Icon:l,show_label:b,disable:c,float:o}),n.$inject_state=t=>{"label"in t&&s(0,i=t.label),"Icon"in t&&s(1,l=t.Icon),"show_label"in t&&s(2,b=t.show_label),"disable"in t&&s(3,c=t.disable),"float"in t&&s(4,o=t.float)},e&&"$$inject"in e&&n.$inject_state(e.$$inject),[i,l,b,c,o]}class A extends p{constructor(e){super(e),k(this,e,q,m,B,{label:0,Icon:1,show_label:2,disable:3,float:4}),v("SvelteRegisterComponent",{component:this,tagName:"BlockLabel",options:e,id:m.name})}get label(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get Icon(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set Icon(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disable(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disable(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get float(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set float(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{A as B};
//# sourceMappingURL=BlockLabel-2ee7f826.js.map
