import{SvelteComponentDev as h,init as p,safe_not_equal as b,dispatch_dev as u,validate_slots as v,create_slot as g,create_component as S,mount_component as k,transition_in as m,transition_out as _,destroy_component as y,update_slot_base as E,get_all_dirty_from_scope as P,get_slot_changes as j}from"../../../node/dev/svelte-internal.js";import"./index-09ad131b.js";import{B as f}from"./Button-70427016.js";function d(s){let e;const c=s[3].default,i=g(c,s,s[4],null),r={c:function(){i&&i.c()},m:function(t,l){i&&i.m(t,l),e=!0},p:function(t,l){i&&i.p&&(!e||l&16)&&E(i,c,t,t[4],e?j(c,t[4],l,null):P(t[4]),null)},i:function(t){e||(m(i,t),e=!0)},o:function(t){_(i,t),e=!1},d:function(t){i&&i.d(t)}};return u("SvelteRegisterBlock",{block:r,id:d.name,type:"slot",source:"(7:0) <Block {elem_id} {elem_classes} {visible} explicit_call>",ctx:s}),r}function a(s){let e,c;e=new f({props:{elem_id:s[0],elem_classes:s[1],visible:s[2],explicit_call:!0,$$slots:{default:[d]},$$scope:{ctx:s}},$$inline:!0});const i={c:function(){S(e.$$.fragment)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,t){k(e,n,t),c=!0},p:function(n,[t]){const l={};t&1&&(l.elem_id=n[0]),t&2&&(l.elem_classes=n[1]),t&4&&(l.visible=n[2]),t&16&&(l.$$scope={dirty:t,ctx:n}),e.$set(l)},i:function(n){c||(m(e.$$.fragment,n),c=!0)},o:function(n){_(e.$$.fragment,n),c=!1},d:function(n){y(e,n)}};return u("SvelteRegisterBlock",{block:i,id:a.name,type:"component",source:"",ctx:s}),i}function B(s,e,c){let{$$slots:i={},$$scope:r}=e;v("Static",i,["default"]);let{elem_id:n}=e,{elem_classes:t}=e,{visible:l=!0}=e;s.$$.on_mount.push(function(){n===void 0&&!("elem_id"in e||s.$$.bound[s.$$.props.elem_id])&&console.warn("<Static> was created without expected prop 'elem_id'"),t===void 0&&!("elem_classes"in e||s.$$.bound[s.$$.props.elem_classes])&&console.warn("<Static> was created without expected prop 'elem_classes'")});const w=["elem_id","elem_classes","visible"];return Object.keys(e).forEach(o=>{!~w.indexOf(o)&&o.slice(0,2)!=="$$"&&o!=="slot"&&console.warn(`<Static> was created with unknown prop '${o}'`)}),s.$$set=o=>{"elem_id"in o&&c(0,n=o.elem_id),"elem_classes"in o&&c(1,t=o.elem_classes),"visible"in o&&c(2,l=o.visible),"$$scope"in o&&c(4,r=o.$$scope)},s.$capture_state=()=>({Block:f,elem_id:n,elem_classes:t,visible:l}),s.$inject_state=o=>{"elem_id"in o&&c(0,n=o.elem_id),"elem_classes"in o&&c(1,t=o.elem_classes),"visible"in o&&c(2,l=o.visible)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),[n,t,l,i,r]}class R extends h{constructor(e){super(e),p(this,e,B,a,b,{elem_id:0,elem_classes:1,visible:2}),u("SvelteRegisterComponent",{component:this,tagName:"Static",options:e,id:a.name})}get elem_id(){throw new Error("<Static>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Static>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_classes(){throw new Error("<Static>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_classes(e){throw new Error("<Static>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<Static>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<Static>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}const D=R;export{D as default};
//# sourceMappingURL=index-d9ad4d63.js.map
