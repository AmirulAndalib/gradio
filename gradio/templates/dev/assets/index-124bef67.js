import{SvelteComponentDev as j,init as R,safe_not_equal as C,dispatch_dev as P,validate_store as O,component_subscribe as q,validate_slots as D,create_component as N,mount_component as X,transition_in as A,transition_out as F,destroy_component as G,text as H,insert_dev as I,set_data_dev as J,detach_dev as K}from"../../../node/dev/svelte-internal.js";import{X as S}from"./index-168e7816.js";import{a as y}from"./Button-e33227ec.js";function k(n){let t=n[14](n[3])+"",o;const a={c:function(){o=H(t)},m:function(s,i){I(s,o,i)},p:function(s,i){i&16392&&t!==(t=s[14](s[3])+"")&&J(o,t)},d:function(s){s&&K(o)}};return P("SvelteRegisterBlock",{block:a,id:k.name,type:"slot",source:'(19:0) <Button  {value}  {variant}  {elem_id}  {elem_classes}  {size}  {scale}  {link}  {icon}  {min_width}  {visible}  {root}  {root_url}  disabled={mode === \\"static\\"}  on:click={() => gradio.dispatch(\\"click\\")} >',ctx:n}),a}function E(n){let t,o;t=new y({props:{value:n[3],variant:n[4],elem_id:n[0],elem_classes:n[1],size:n[6],scale:n[7],link:n[9],icon:n[8],min_width:n[10],visible:n[2],root:n[12],root_url:n[13],disabled:n[5]==="static",$$slots:{default:[k]},$$scope:{ctx:n}},$$inline:!0}),t.$on("click",n[15]);const a={c:function(){N(t.$$.fragment)},l:function(s){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(s,i){X(t,s,i),o=!0},p:function(s,[i]){const c={};i&8&&(c.value=s[3]),i&16&&(c.variant=s[4]),i&1&&(c.elem_id=s[0]),i&2&&(c.elem_classes=s[1]),i&64&&(c.size=s[6]),i&128&&(c.scale=s[7]),i&512&&(c.link=s[9]),i&256&&(c.icon=s[8]),i&1024&&(c.min_width=s[10]),i&4&&(c.visible=s[2]),i&4096&&(c.root=s[12]),i&8192&&(c.root_url=s[13]),i&32&&(c.disabled=s[5]==="static"),i&81928&&(c.$$scope={dirty:i,ctx:s}),t.$set(c)},i:function(s){o||(A(t.$$.fragment,s),o=!0)},o:function(s){F(t.$$.fragment,s),o=!1},d:function(s){G(t,s)}};return P("SvelteRegisterBlock",{block:a,id:E.name,type:"component",source:"",ctx:n}),a}function L(n,t,o){let a;O(S,"_"),q(n,S,e=>o(14,a=e));let{$$slots:r={},$$scope:s}=t;D("StaticButton",r,[]);let{elem_id:i=""}=t,{elem_classes:c=[]}=t,{visible:m=!0}=t,{value:u}=t,{variant:h="secondary"}=t,{mode:w="dynamic"}=t,{size:d="lg"}=t,{scale:f=null}=t,{icon:_=null}=t,{link:g=null}=t,{min_width:v=void 0}=t,{gradio:l}=t,{root:b=""}=t,{root_url:B=null}=t;n.$$.on_mount.push(function(){u===void 0&&!("value"in t||n.$$.bound[n.$$.props.value])&&console.warn("<StaticButton> was created without expected prop 'value'"),l===void 0&&!("gradio"in t||n.$$.bound[n.$$.props.gradio])&&console.warn("<StaticButton> was created without expected prop 'gradio'")});const z=["elem_id","elem_classes","visible","value","variant","mode","size","scale","icon","link","min_width","gradio","root","root_url"];Object.keys(t).forEach(e=>{!~z.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<StaticButton> was created with unknown prop '${e}'`)});const p=()=>l.dispatch("click");return n.$$set=e=>{"elem_id"in e&&o(0,i=e.elem_id),"elem_classes"in e&&o(1,c=e.elem_classes),"visible"in e&&o(2,m=e.visible),"value"in e&&o(3,u=e.value),"variant"in e&&o(4,h=e.variant),"mode"in e&&o(5,w=e.mode),"size"in e&&o(6,d=e.size),"scale"in e&&o(7,f=e.scale),"icon"in e&&o(8,_=e.icon),"link"in e&&o(9,g=e.link),"min_width"in e&&o(10,v=e.min_width),"gradio"in e&&o(11,l=e.gradio),"root"in e&&o(12,b=e.root),"root_url"in e&&o(13,B=e.root_url)},n.$capture_state=()=>({Button:y,_:S,elem_id:i,elem_classes:c,visible:m,value:u,variant:h,mode:w,size:d,scale:f,icon:_,link:g,min_width:v,gradio:l,root:b,root_url:B,$_:a}),n.$inject_state=e=>{"elem_id"in e&&o(0,i=e.elem_id),"elem_classes"in e&&o(1,c=e.elem_classes),"visible"in e&&o(2,m=e.visible),"value"in e&&o(3,u=e.value),"variant"in e&&o(4,h=e.variant),"mode"in e&&o(5,w=e.mode),"size"in e&&o(6,d=e.size),"scale"in e&&o(7,f=e.scale),"icon"in e&&o(8,_=e.icon),"link"in e&&o(9,g=e.link),"min_width"in e&&o(10,v=e.min_width),"gradio"in e&&o(11,l=e.gradio),"root"in e&&o(12,b=e.root),"root_url"in e&&o(13,B=e.root_url)},t&&"$$inject"in t&&n.$inject_state(t.$$inject),[i,c,m,u,h,w,d,f,_,g,v,l,b,B,a,p]}class U extends j{constructor(t){super(t),R(this,t,L,E,C,{elem_id:0,elem_classes:1,visible:2,value:3,variant:4,mode:5,size:6,scale:7,icon:8,link:9,min_width:10,gradio:11,root:12,root_url:13}),P("SvelteRegisterComponent",{component:this,tagName:"StaticButton",options:t,id:E.name})}get elem_id(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_classes(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_classes(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get variant(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set variant(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get mode(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set mode(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get size(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set size(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get scale(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set scale(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get icon(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set icon(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get link(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set link(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get min_width(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set min_width(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get gradio(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set gradio(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get root(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set root(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get root_url(){throw new Error("<StaticButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set root_url(t){throw new Error("<StaticButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{y as BaseButton,U as default};
//# sourceMappingURL=index-124bef67.js.map
